<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<properties>
		<group_id>Prac2</group_id>
		<artifact_id>HW_Maven</artifact_id>
		<version_name>1.0</version_name>
		<reports_plugin_version>2.10.4</reports_plugin_version>
    		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<modelVersion>4.0.0</modelVersion>
	<groupId>Prac2</groupId>
	<artifactId>HW_Maven</artifactId>
	<version>1.0</version>
	<!-- 
	<name>HelloWorldProject</name> 
	<groupId>${group_id}</groupId>
	<artifactId>${artifact_id}</artifactId>
	<version>${version_name}</version>
	-->
	
	<profiles>
       	<!-- better to have keep this sonar profile in your maven settings.xml -->
      	<profile>
            <id>sonar</id>
            <activation>
              <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                 <sonar.host.url>http://192.168.100.1:9000</sonar.host.url>
                 <!-- 
				 <sonar.jdbc.url>jdbc:derby://localhost:1527/sonar</sonar.jdbc.url> 
                 <sonar.jdbc.driver>org.apache.derby.jdbc.ClientDriver</sonar.jdbc.driver>
                 <sonar.jdbc.username>admin123</sonar.jdbc.username>
                 <sonar.jdbc.password>admin123</sonar.jdbc.password>
				 -->
            </properties>
       	</profile>
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

        <!-- <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.5.201505241946</version>
        </dependency> -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>D:/Users/manchalav/Desktop</outputDirectory>
							<resources>
								<resource>
									<include>*.jar</include>
									<directory>target</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- The below element executes a test suite -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<includes>
						<include>**/HelloWorldTestSuite.class</include>
					</includes>
				</configuration>
			</plugin>
			
	        <!-- JaCoCo configuration -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.5.201505241946</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

	<!-- The below profiles element is used to run the tests in executing tests 
		of specified categories -->
	<!-- <profiles> <profile> <id>FastTests</id> <activation> <activeByDefault>true</activeByDefault> 
		</activation> <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> 
		<artifactId>maven-surefire-plugin</artifactId> <configuration> <groups>com.vnath.maven.hw.test.categories.FastRunningTests</groups> 
		</configuration> </plugin> </plugins> </build> </profile> </profiles> -->
	<reporting>
		<!-- Below element is used to change the output directory for all the generated 
			reporting related files -->
		<!-- <outputDirectory>D:\Users\manchalav\Documents\Reports_Maven</outputDirectory> -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${reports_plugin_version}</version>

				<!-- Below configuration is not working -->
				<!-- <configuration> <reportOutputDirectory>D:\Users\manchalav\Desktop</reportOutputDirectory> 
					<destDir>myapidocs</destDir> </configuration> -->

				<configuration>
					<destDir>javadocs</destDir>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
			</plugin>

		</plugins>
	</reporting>

	<!-- The below configuration is for artifact deployment to Nexus repository-vishwarepo1 -->
	<distributionManagement>
		<repository>
			<id>MyRepoUniqueName</id><!-- This id should match with the corresponding 
				server element id provided in settings.xml file -->
			<name>vishwarepository1</name>
			<url>http://localhost:8081/repository/myrepo/</url>
		</repository>
	</distributionManagement>

</project>
